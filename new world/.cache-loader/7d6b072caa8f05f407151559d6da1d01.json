{"remainingRequest":"/Users/pro/new world/node_modules/babel-loader/lib/index.js!/Users/pro/new world/node_modules/eslint-loader/index.js??ref--4-0!/Users/pro/new world/app/component/login/component/UserDialog.jsx","dependencies":[{"path":"/Users/pro/new world/app/component/login/component/UserDialog.jsx","mtime":1521812527524},{"path":"/Users/pro/new world/.babelrc","mtime":1521535929596},{"path":"/Users/pro/new world/node_modules/cache-loader/dist/cjs.js","mtime":1521535871442},{"path":"/Users/pro/new world/node_modules/babel-loader/lib/index.js","mtime":1520329890000},{"path":"/Users/pro/new world/node_modules/eslint-loader/index.js","mtime":1499322156000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRouterDom = require('react-router-dom');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar UserDialog = function (_Component) {\n    _inherits(UserDialog, _Component);\n\n    function UserDialog(props) {\n        _classCallCheck(this, UserDialog);\n\n        var _this = _possibleConstructorReturn(this, (UserDialog.__proto__ || Object.getPrototypeOf(UserDialog)).call(this, props));\n\n        _this.state = {\n            selected: 'signUp',\n            formData: {\n                username: '',\n                password: ''\n            }\n        };\n        return _this;\n    }\n\n    _createClass(UserDialog, [{\n        key: 'switch',\n        value: function _switch(e) {\n            this.setState({\n                selected: e.target.value\n            });\n        }\n    }, {\n        key: 'signUp',\n        value: function signUp(e) {}\n    }, {\n        key: 'signIn',\n        value: function signIn(e) {}\n    }, {\n        key: 'changeFormData',\n        value: function changeFormData(key, e) {\n            var stateCopy = JSON.parse(JSON.stringify(this.state)); //拷贝state\n            stateCopy.formData[key] = e.target.value;\n            this.setState(stateCopy);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            // let signUpForm = (\n            //       <form className=\"signUp\" onSubmit={this.signUp.bind(this)}> {/* 注册*/}\n            //             <div className=\"row\">\n            //                   <label>用户名</label>\n            //                 <input type=\"username\"\n            //                        onChange={this.changeFormData.bind(this,'username')}\n            //                        value = {this.state.formData.username}\n            //                 />\n            //                 </div>\n            //             <div className=\"row\">\n            //                   <label>密码</label>\n            //                   <input type=\"password\"\n            //                          onChange={this.changeFormData.bind(this,'password')}\n            //                          value = {this.state.formData.password}\n            //                   />\n            //             </div>\n            //             <div className=\"row actions\">\n            //                   <button type=\"submit\">注册</button>\n            //             </div>\n            //       </form>\n            //     )\n            //     let signInForm = (\n            //           <form className=\"signIn\" onubmit={this.signIn.bind(this)}> {/* 登录*/}\n            //               <div className=\"row\">\n            //                   <label>用户名</label>\n            //                   <input type=\"username\"\n            //                          onChange={this.changeFormData.bind(this,'username')}\n            //                          value = {this.state.formData.username}\n            //                   />\n            //               </div>\n            //               <div className=\"row\">\n            //                   <label>密码</label>\n            //                   <input type=\"password\"\n            //                          onChange={this.changeFormData.bind(this,'password')}\n            //                          value = {this.state.formData.password}\n            //                   />\n            //               </div>\n            //               <div className=\"row actions\">\n            //                   <button type=\"submit\">登录</button>\n            //               </div>\n            //           </form>\n            //     )\n            return _react2.default.createElement(\n                'div',\n                { className: 'UserDialog-Wrapper' },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'loginBox' },\n                    _react2.default.createElement(\n                        _reactRouterDom.NavLink,\n                        { to: '/loginIn' },\n                        '\\u6CE8\\u518C\\u9875'\n                    ),\n                    _react2.default.createElement(\n                        _reactRouterDom.NavLink,\n                        { to: '../' },\n                        '\\u4F01\\u4E8B\\u4E1A'\n                    )\n                )\n            );\n        }\n    }]);\n\n    return UserDialog;\n}(_react.Component);\n\nexports.default = UserDialog;",null]}