{"remainingRequest":"/Users/pro/new world/node_modules/babel-loader/lib/index.js!/Users/pro/new world/node_modules/eslint-loader/index.js??ref--4-0!/Users/pro/new world/app/component/login/component/date/date.jsx","dependencies":[{"path":"/Users/pro/new world/app/component/login/component/date/date.jsx","mtime":1522057669008},{"path":"/Users/pro/new world/.babelrc","mtime":1522043804407},{"path":"/Users/pro/new world/node_modules/cache-loader/dist/cjs.js","mtime":1521535871442},{"path":"/Users/pro/new world/node_modules/babel-loader/lib/index.js","mtime":1520329890000},{"path":"/Users/pro/new world/node_modules/eslint-loader/index.js","mtime":1499322156000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _getDate = require('./getDate');\n\nvar _getDate2 = _interopRequireDefault(_getDate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Calendar = function Calendar() {\n    return {\n\n        /**\n         * 默认的属性\n         */\n        getDefaultProps: function getDefaultProps() {\n            return {\n                row_number: 6,\n                col_number: 7\n            };\n        },\n\n\n        /**\n         * 组件初始化状态\n         */\n        getInitialState: function getInitialState() {\n            return {\n                current_year: _getDate2.default.getFullYear(),\n                current_month: _getDate2.default.getMonth(),\n                current_day: _getDate2.default.getDate(),\n                select_year: _getDate2.default.getFullYear(),\n                select_month: _getDate2.default.getMonth(),\n                select_day: _getDate2.default.getDate(),\n                history_year: undefined,\n                history_month: undefined,\n                history_day: undefined,\n                date_num_array: []\n            };\n        },\n        componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n            // todo\n        },\n\n\n        /**\n         * 组件渲染完后执行\n         */\n        componentDidMount: function componentDidMount() {\n            var _props = this.props,\n                year = _props.year,\n                month = _props.month,\n                day = _props.day;\n\n            // 初始化状态\n\n            if (year && month && day) {\n                var date_num_array = this._initMonthDayNumber(year),\n                    first_day = _getDate2.default.weekOfMonth(new Date(year, month - 1));\n\n                this.setState({\n                    select_year: year,\n                    select_month: month - 1,\n                    select_day: day,\n                    date_num_array: date_num_array,\n                    first_day: first_day\n                });\n            }\n        },\n\n\n        /**\n         * 给月份数组附上每月天数\n         * @param year 年份\n         * @private\n         */\n        _initMonthDayNumber: function _initMonthDayNumber(year) {\n            var _date_array = [];\n\n            for (var i = 0; i < 12; i++) {\n                switch (i + 1) {\n                    case 1:\n                    case 3:\n                    case 5:\n                    case 7:\n                    case 8:\n                    case 10:\n                    case 12:\n                        _date_array.push(31);\n                        break;\n                    case 4:\n                    case 6:\n                    case 9:\n                    case 11:\n                        _date_array.push(30);\n                        break;\n                    case 2:\n                        if (_getDate2.default.isLeapYear(year)) {\n                            _date_array.push(29);\n                        } else {\n                            _date_array.push(28);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n\n            return _date_array;\n        },\n\n\n        /**\n         * 组件将要挂载\n         * 设置月份数组以及计算出每月的第一天星期几\n         */\n        componentWillMount: function componentWillMount() {\n            var date_num_array = this._initMonthDayNumber(this.state.current_year),\n                first_day = _getDate2.default.weekOfMonth();\n\n            this.setState({ date_num_array: date_num_array, first_day: first_day });\n        },\n\n\n        /**\n         * 日期选择\n         * @param s_day\n         */\n        selectDate: function selectDate(s_day) {\n            var _this = this;\n\n            var _state = this.state,\n                select_year = _state.select_year,\n                select_month = _state.select_month;\n\n            this.setState({\n                history_year: select_year,\n                history_month: select_month,\n                history_day: s_day,\n                select_day: s_day\n            }, function () {\n                _this.props.onSelectDate(select_year, select_month + 1, s_day);\n            });\n        },\n\n\n        /**\n         * 前一个月\n         */\n        previousMonth: function previousMonth() {\n            var _state2 = this.state,\n                current_year = _state2.current_year,\n                current_month = _state2.current_month,\n                current_day = _state2.current_day,\n                select_year = _state2.select_year,\n                select_month = _state2.select_month,\n                select_day = _state2.select_day,\n                date_num_array = _state2.date_num_array,\n                first_day = _state2.first_day;\n\n\n            if (select_month === 0) {\n                select_year = +select_year - 1;\n                select_month = 11;\n                date_num_array = this._initMonthDayNumber(select_year);\n            } else {\n                select_month = +select_month - 1;\n            }\n\n            first_day = _getDate2.default.weekOfMonth(new Date(select_year, select_month));\n\n            if (current_year === select_year && current_month === select_month) {\n                select_day = current_day;\n            } else {\n                select_day = undefined;\n            }\n\n            this.setState({\n                select_year: select_year,\n                select_month: select_month,\n                select_day: select_day,\n                date_num_array: date_num_array,\n                first_day: first_day\n            });\n        },\n\n\n        /**\n         * 之后一个月\n         */\n        nextMonth: function nextMonth() {\n            var _state3 = this.state,\n                current_year = _state3.current_year,\n                current_month = _state3.current_month,\n                current_day = _state3.current_day,\n                select_year = _state3.select_year,\n                select_month = _state3.select_month,\n                select_day = _state3.select_day,\n                date_num_array = _state3.date_num_array,\n                first_day = _state3.first_day;\n\n\n            if (select_month === 11) {\n                select_year = +select_year + 1;\n                select_month = 0;\n                date_num_array = this._initMonthDayNumber(select_year);\n            } else {\n                select_month = +select_month + 1;\n            }\n\n            first_day = _getDate2.default.weekOfMonth(new Date(select_year, select_month));\n\n            if (current_year === select_year && current_month === select_month) {\n                select_day = current_day;\n            } else {\n                select_day = undefined;\n            }\n\n            this.setState({\n                select_year: select_year,\n                select_month: select_month,\n                select_day: select_day,\n                date_num_array: date_num_array,\n                first_day: first_day\n            });\n        },\n\n\n        /**\n         * 渲染页面\n         * @returns {XML}\n         */\n        render: function render() {\n            var _props2 = this.props,\n                row_number = _props2.row_number,\n                col_number = _props2.col_number,\n                tags = _props2.tags;\n            var _state4 = this.state,\n                current_year = _state4.current_year,\n                current_month = _state4.current_month,\n                current_day = _state4.current_day,\n                select_year = _state4.select_year,\n                select_month = _state4.select_month,\n                select_day = _state4.select_day,\n                history_year = _state4.history_year,\n                history_month = _state4.history_month,\n                history_day = _state4.history_day,\n                date_num_array = _state4.date_num_array,\n                first_day = _state4.first_day;\n\n\n            var month_day = date_num_array[select_month],\n                n_day = row_number * col_number - first_day - month_day,\n                previous_month_days = undefined,\n                previous_days = [],\n                current_days = [],\n                next_days = [],\n                total_days = [],\n                previous_month = undefined;\n\n            if (select_month === 0) {\n                previous_month = 11;\n            } else {\n                previous_month = select_month - 1;\n            }\n\n            previous_month_days = date_num_array[previous_month];\n            for (var i = 0; i < first_day; i++) {\n                var previous_link = _react2.default.createElement(\n                    'li',\n                    { className: 'item-gray', key: 'previous' + i },\n                    _react2.default.createElement(\n                        'a',\n                        { href: 'javascript:;' },\n                        previous_month_days - (first_day - i) + 1\n                    )\n                );\n                previous_days.push(previous_link);\n            }\n\n            var currentClassName = '',\n                currentText = '';\n            for (var _i = 0; _i < month_day; _i++) {\n\n                // 今天样式\n                if (current_year == select_year && current_month == select_month && current_day == _i + 1) {\n                    currentClassName = 'item-current';\n                    currentText = '今天';\n                } else {\n                    currentText = _i + 1;\n\n                    // 判断选择样式与历史样式是否相等，相等激活\n                    if (select_year == history_year && select_month == history_month && history_day == _i + 1) {\n                        currentClassName = 'item-active';\n                    } else {\n                        currentClassName = '';\n                    }\n                }\n\n                // 添加tag样式\n                if (tags.length > 0) {\n                    for (var j = 0; j < tags.length; j++) {\n                        if (_i + 1 === tags[j]) {\n                            currentClassName += 'item-tag';\n                            break;\n                        }\n                    }\n                }\n\n                var current_link = _react2.default.createElement(\n                    'li',\n                    { className: currentClassName, key: 'current' + _i },\n                    _react2.default.createElement(\n                        'a',\n                        { href: 'javascript:;', onClick: this.selectDate.bind(this, _i + 1) },\n                        currentText\n                    )\n                );\n                current_days.push(current_link);\n            }\n\n            for (var _i2 = 0; _i2 < n_day; _i2++) {\n                var next_link = _react2.default.createElement(\n                    'li',\n                    { className: 'item-gray', key: 'next' + _i2 },\n                    _react2.default.createElement(\n                        'a',\n                        { href: 'javascript:;' },\n                        _i2 + 1\n                    )\n                );\n                next_days.push(next_link);\n            }\n\n            total_days = previous_days.concat(current_days, next_days);\n\n            var ul_list = [];\n            if (total_days.length > 0) {\n                for (var _i3 = 0; _i3 < row_number; _i3++) {\n                    var li_list = [],\n                        start_index = _i3 * col_number,\n                        end_index = (_i3 + 1) * col_number;\n                    for (var _j = start_index; _j < end_index; _j++) {\n                        li_list.push(total_days[_j]);\n                    }\n                    ul_list.push(li_list);\n                }\n            }\n\n            return _react2.default.createElement(\n                'div',\n                { className: 'calendar' },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'calendar-header' },\n                    _react2.default.createElement('i', { className: 'icon-left', onClick: this.previousMonth }),\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        select_year,\n                        ' \\u5E74 ',\n                        select_month + 1,\n                        ' \\u6708'\n                    ),\n                    _react2.default.createElement('i', { className: 'icon-right', onClick: this.nextMonth })\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'calendar-body' },\n                    _react2.default.createElement(\n                        'ul',\n                        { className: 'c-body-head' },\n                        _react2.default.createElement(\n                            'li',\n                            null,\n                            '\\u65E5'\n                        ),\n                        _react2.default.createElement(\n                            'li',\n                            null,\n                            '\\u4E00'\n                        ),\n                        _react2.default.createElement(\n                            'li',\n                            null,\n                            '\\u4E8C'\n                        ),\n                        _react2.default.createElement(\n                            'li',\n                            null,\n                            '\\u4E09'\n                        ),\n                        _react2.default.createElement(\n                            'li',\n                            null,\n                            '\\u56DB'\n                        ),\n                        _react2.default.createElement(\n                            'li',\n                            null,\n                            '\\u4E94'\n                        ),\n                        _react2.default.createElement(\n                            'li',\n                            null,\n                            '\\u516D'\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'c-body-content' },\n                        ul_list.map(function (u, index) {\n                            return _react2.default.createElement(\n                                'ul',\n                                { key: 'ul' + index, className: 'content-row' },\n                                u\n                            );\n                        })\n                    )\n                )\n            );\n        }\n    };\n};\n\nexports.default = Calendar;",null]}