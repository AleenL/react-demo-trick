{"remainingRequest":"/Users/pro/new world/node_modules/babel-loader/lib/index.js!/Users/pro/new world/node_modules/eslint-loader/index.js??ref--4-0!/Users/pro/new world/app/component/login/component/date/index.jsx","dependencies":[{"path":"/Users/pro/new world/app/component/login/component/date/index.jsx","mtime":1522311640645},{"path":"/Users/pro/new world/.babelrc","mtime":1522043804407},{"path":"/Users/pro/new world/node_modules/cache-loader/dist/cjs.js","mtime":1521535871442},{"path":"/Users/pro/new world/node_modules/babel-loader/lib/index.js","mtime":1520329890000},{"path":"/Users/pro/new world/node_modules/eslint-loader/index.js","mtime":1499322156000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _CalendarHeader = require('./CalendarHeader');\n\nvar _CalendarHeader2 = _interopRequireDefault(_CalendarHeader);\n\nvar _CalendarMain = require('./CalendarMain');\n\nvar _CalendarMain2 = _interopRequireDefault(_CalendarMain);\n\nrequire('../../../../public/css/date/index.pcss');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar displayDaysPerMonth = function displayDaysPerMonth(year) {\n\n    //定义每个月的天数，如果是闰年第二月改为29天\n    var daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0) {\n        daysInMonth[1] = 29;\n    }\n\n    //以下为了获取一年中每一个月在日历选择器上显示的数据，\n    //从上个月开始，接着是当月，最后是下个月开头的几天\n\n    //定义一个数组，保存上一个月的天数\n    var daysInPreviousMonth = [].concat(daysInMonth);\n    daysInPreviousMonth.unshift(daysInPreviousMonth.pop());\n\n    //获取每一个月显示数据中需要补足上个月的天数\n    var addDaysFromPreMonth = new Array(12).fill(null).map(function (item, index) {\n        var day = new Date(year, index, 1).getDay();\n        if (day === 0) {\n            return 6;\n        } else {\n            return day - 1;\n        }\n    });\n\n    //已数组形式返回一年中每个月的显示数据,每个数据为6行*7天\n    return new Array(12).fill([]).map(function (month, monthIndex) {\n        var addDays = addDaysFromPreMonth[monthIndex],\n            daysCount = daysInMonth[monthIndex],\n            daysCountPrevious = daysInPreviousMonth[monthIndex],\n            monthData = [];\n        //补足上一个月\n        for (; addDays > 0; addDays--) {\n            monthData.unshift(daysCountPrevious--);\n        }\n        //添入当前月\n        for (var i = 0; i < daysCount;) {\n            monthData.push(++i);\n        }\n        //补足下一个月\n        for (var _i = 42 - monthData.length, j = 0; j < _i;) {\n            monthData.push(++j);\n        }\n        return monthData;\n    });\n};\n\nvar Calendar = function (_React$Component) {\n    _inherits(Calendar, _React$Component);\n\n    function Calendar() {\n        _classCallCheck(this, Calendar);\n\n        var _this = _possibleConstructorReturn(this, (Calendar.__proto__ || Object.getPrototypeOf(Calendar)).call(this));\n        //继承React.Component\n\n\n        var now = new Date();\n        _this.state = {\n            year: now.getFullYear(),\n            month: now.getMonth(),\n            day: now.getDate(),\n            picked: false,\n            today: true\n        };\n        return _this;\n    }\n\n    //切换到下一个月\n\n\n    _createClass(Calendar, [{\n        key: 'nextMonth',\n        value: function nextMonth(index) {\n            var thisYear = new Date().getFullYear();\n            var thisMonth = new Date().getMonth() - 1;\n            var day = parseInt(index, 10) > 0 ? index : this.state.day;\n            var year = this.state.year;\n            var month = this.state.month;\n\n            if (thisYear === this.state.year && thisMonth === this.state.month) {\n                this.setState({\n                    today: true\n                });\n            } else {\n                this.setState({\n                    today: false\n                });\n            }\n\n            if (this.state.month === 11) {\n                this.setState({\n                    year: ++year,\n                    month: 0,\n                    day: day\n                });\n            } else {\n                this.setState({\n                    month: ++month,\n                    day: day\n                });\n            }\n            console.log(this.state.year, this.state.month, thisYear, thisMonth);\n        }\n        //切换到上一个月\n\n    }, {\n        key: 'prevMonth',\n        value: function prevMonth(index) {\n            var thisYear = new Date().getFullYear();\n            var thisMonth = new Date().getMonth() + 1;\n            var day = parseInt(index, 10) > 0 ? index : this.state.day;\n            var year = this.state.year;\n            var month = this.state.month;\n\n            if (thisYear === this.state.year && thisMonth === this.state.month) {\n                this.setState({\n                    today: true\n                });\n            } else {\n                this.setState({\n                    today: false\n                });\n            }\n\n            if (this.state.month === 0) {\n                this.setState({\n                    year: --year,\n                    month: 11,\n                    day: day\n                });\n            } else {\n                this.setState({\n                    month: --month,\n                    day: day\n                });\n            }\n        }\n        //选择日期\n\n    }, {\n        key: 'datePick',\n        value: function datePick(day) {\n            this.setState({ day: day });\n        }\n        //切换日期选择器是否显示\n\n    }, {\n        key: 'datePickerToggle',\n        value: function datePickerToggle() {\n            this.refs.main.style.height = this.refs.main.style.height === '460px' ? '0px' : '460px';\n        }\n        //标记日期已经选择\n\n    }, {\n        key: 'picked',\n        value: function picked() {\n            this.setState({\n                picked: true\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var props = {\n                viewData: displayDaysPerMonth(this.state.year),\n                datePicked: this.state.year + ' \\u5E74\\n                   ' + (this.state.month + 1) + ' \\u6708\\n                   ' + this.state.day + ' \\u65E5'\n            };\n            return _react2.default.createElement(\n                'div',\n                { className: 'output', id: 'calendarContainer' },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'dateBox' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'main', ref: 'main' },\n                        _react2.default.createElement(_CalendarHeader2.default, { prevMonth: this.prevMonth.bind(this),\n                            nextMonth: this.nextMonth.bind(this),\n                            year: this.state.year,\n                            month: this.state.month,\n                            day: this.state.day }),\n                        _react2.default.createElement(_CalendarMain2.default, _extends({}, props, {\n                            prevMonth: this.prevMonth.bind(this),\n                            nextMonth: this.nextMonth.bind(this),\n                            datePick: this.datePick.bind(this),\n                            year: this.state.year,\n                            month: this.state.month,\n                            day: this.state.day,\n                            today: this.state.today }))\n                    )\n                )\n            );\n        }\n    }]);\n\n    return Calendar;\n}(_react2.default.Component);\n\nexports.default = Calendar;",null]}